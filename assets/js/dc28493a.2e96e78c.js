"use strict";(self.webpackChunkteaching_toolbox_website_generator=self.webpackChunkteaching_toolbox_website_generator||[]).push([[6408],{4137:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),f=c(n),d=a,b=f["".concat(s,".").concat(d)]||f[d]||u[d]||o;return n?r.createElement(b,i(i({ref:t},p),{},{components:n})):r.createElement(b,i({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=f;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},7584:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return p},default:function(){return f}});var r=n(7462),a=n(3366),o=(n(7294),n(4137)),i=["components"],l={title:"std::variant",benefit:3,easiness:3,level:3,tags:["Clean Code","Performant Code","C++"]},s=void 0,c={unversionedId:"lessons/variant",id:"lessons/variant",title:"std::variant",description:"https://youtu.be/ojZbFIQSdl8?t=869",source:"@site/../../content/lessons/variant.md",sourceDirName:"lessons",slug:"/lessons/variant",permalink:"/Learn--Clean-Code-With-Cpp/lessons/variant",tags:[{label:"Clean Code",permalink:"/Learn--Clean-Code-With-Cpp/tags/clean-code"},{label:"Performant Code",permalink:"/Learn--Clean-Code-With-Cpp/tags/performant-code"},{label:"C++",permalink:"/Learn--Clean-Code-With-Cpp/tags/c"}],version:"current",frontMatter:{title:"std::variant",benefit:3,easiness:3,level:3,tags:["Clean Code","Performant Code","C++"]},sidebar:"lessons",previous:{title:"State and Strategy",permalink:"/Learn--Clean-Code-With-Cpp/lessons/state-and-strategy"},next:{title:"Cache and Branches",permalink:"/Learn--Clean-Code-With-Cpp/lessons/cache-and-branches"}},p=[],u={toc:p};function f(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://youtu.be/ojZbFIQSdl8?t=869"},"https://youtu.be/ojZbFIQSdl8?t=869"),"\n",(0,o.kt)("a",{parentName:"p",href:"https://youtu.be/ojZbFIQSdl8?t=1128"},"https://youtu.be/ojZbFIQSdl8?t=1128")),(0,o.kt)("p",null,"It is a very good alternative to enums, because it can contain data, and be resolved through functions overload instead of switches. "),(0,o.kt)("p",null,"To replace polymorphism made with inheritance: ",(0,o.kt)("a",{parentName:"p",href:"https://youtu.be/gKbORJtnVu8"},"https://youtu.be/gKbORJtnVu8")))}f.isMDXComponent=!0}}]);