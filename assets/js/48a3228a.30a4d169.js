"use strict";(self.webpackChunkteaching_toolbox_website_generator=self.webpackChunkteaching_toolbox_website_generator||[]).push([[8263],{4137:function(e,t,s){s.d(t,{Zo:function(){return p},kt:function(){return u}});var n=s(7294);function i(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}function r(e,t){var s=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),s.push.apply(s,n)}return s}function o(e){for(var t=1;t<arguments.length;t++){var s=null!=arguments[t]?arguments[t]:{};t%2?r(Object(s),!0).forEach((function(t){i(e,t,s[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(s)):r(Object(s)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(s,t))}))}return e}function a(e,t){if(null==e)return{};var s,n,i=function(e,t){if(null==e)return{};var s,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)s=r[n],t.indexOf(s)>=0||(i[s]=e[s]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)s=r[n],t.indexOf(s)>=0||Object.prototype.propertyIsEnumerable.call(e,s)&&(i[s]=e[s])}return i}var l=n.createContext({}),d=function(e){var t=n.useContext(l),s=t;return e&&(s="function"==typeof e?e(t):o(o({},t),e)),s},p=function(e){var t=d(e.components);return n.createElement(l.Provider,{value:t},e.children)},C={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var s=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),g=d(s),u=i,c=g["".concat(l,".").concat(u)]||g[u]||C[u]||r;return s?n.createElement(c,o(o({ref:t},p),{},{components:s})):n.createElement(c,o({ref:t},p))}));function u(e,t){var s=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=s.length,o=new Array(r);o[0]=g;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a.mdxType="string"==typeof e?e:i,o[1]=a;for(var d=2;d<r;d++)o[d]=s[d];return n.createElement.apply(null,o)}return n.createElement.apply(null,s)}g.displayName="MDXCreateElement"},8442:function(e,t,s){s.d(t,{Z:function(){return r}});var n=s(7294),i=s(4820);function r(e){var t=e.slug,s=e.text,r=e.anchor,o=i.find((function(e){return e.slug===t}));if(void 0===o)throw console.error('Broken link to inexistant lesson "'+t+'"'),"";return n.createElement("a",{href:o.link+(r||"")},s||o.title)}},809:function(e,t,s){s.r(t),s.d(t,{frontMatter:function(){return l},contentTitle:function(){return d},metadata:function(){return p},toc:function(){return C},default:function(){return u}});var n=s(7462),i=s(3366),r=(s(7294),s(4137)),o=s(8442),a=["components"],l={title:"Write libraries",benefit:5,easiness:3,order:3,tags:["Clean Code"]},d=void 0,p={unversionedId:"lessons/write-libraries",id:"lessons/write-libraries",title:"Write libraries",description:"Even if it's only for your personal use, it will help you a lot with code reuse across projects and also inside one project. And also it will force you to make your code a little more generic, which most of the time will improve it at the same time. Moreover, it will make sure that the code is decoupled from the rest of your application.",source:"@site/../../content/lessons/write-libraries.md",sourceDirName:"lessons",slug:"/lessons/write-libraries",permalink:"/Learn--Clean-Code-With-Cpp/lessons/write-libraries",tags:[{label:"Clean Code",permalink:"/Learn--Clean-Code-With-Cpp/tags/clean-code"}],version:"current",frontMatter:{title:"Write libraries",benefit:5,easiness:3,order:3,tags:["Clean Code"]},sidebar:"lessons",previous:{title:"Watch conferences",permalink:"/Learn--Clean-Code-With-Cpp/lessons/watch-conferences"},next:{title:"Dear ImGui",permalink:"/Learn--Clean-Code-With-Cpp/lessons/dear-imgui"}},C=[],g={toc:C};function u(e){var t=e.components,s=(0,i.Z)(e,a);return(0,r.kt)("wrapper",(0,n.Z)({},g,s,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Even if it's only for your personal use, it will help you a lot with code reuse across projects and also inside one project. And also it will force you to make your code a little more generic, which most of the time will improve it at the same time. Moreover, it will make sure that the code is decoupled from the rest of your application."),(0,r.kt)("p",null,"So : as soon as you are write some bit of code that is fairly generic, consider turning it into a library."),(0,r.kt)("p",null,"For CMake refer back to ",(0,r.kt)(o.Z,{text:"here",slug:"cmake",anchor:"#cmake-for-library-authors",mdxType:"LessonLink"}),"."))}u.isMDXComponent=!0},4820:function(e){e.exports=JSON.parse('[{"title":"Use a debugger","benefit":5,"easiness":5,"order":1,"tags":["Tools"],"link":"/Learn--Clean-Code-With-Cpp/lessons/debugger","slug":"debugger","priority":1},{"title":"Use an IDE","benefit":5,"easiness":5,"order":1,"tags":["Tools"],"link":"/Learn--Clean-Code-With-Cpp/lessons/ide","slug":"ide","priority":1},{"title":"std::vector","benefit":5,"easiness":5,"order":1,"tags":["Clean Code","Performant Code","C++"],"link":"/Learn--Clean-Code-With-Cpp/lessons/vector","slug":"vector","priority":1},{"title":"Use Git","benefit":5,"easiness":3,"order":1,"tags":["Tools","Git"],"link":"/Learn--Clean-Code-With-Cpp/lessons/git","slug":"git","priority":0.975},{"title":"Use a formatting tool","benefit":4,"easiness":5,"order":1,"tags":["Tools"],"link":"/Learn--Clean-Code-With-Cpp/lessons/formatting-tool","slug":"formatting-tool","priority":0.9625},{"title":"Naming","benefit":5,"easiness":1,"order":1,"tags":["Clean Code"],"link":"/Learn--Clean-Code-With-Cpp/lessons/naming","slug":"naming","priority":0.95},{"title":"Split problems in small pieces","benefit":5,"easiness":1,"order":1,"tags":["Workflow"],"link":"/Learn--Clean-Code-With-Cpp/lessons/split-problems-in-small-pieces","slug":"split-problems-in-small-pieces","priority":0.95},{"title":"Consistency in style","benefit":3,"easiness":5,"order":1,"tags":["Beautiful Code"],"link":"/Learn--Clean-Code-With-Cpp/lessons/consistency-in-style","slug":"consistency-in-style","priority":0.925},{"title":"Design Great Classes","benefit":5,"easiness":3,"order":2,"tags":["Clean Code"],"link":"/Learn--Clean-Code-With-Cpp/lessons/design-great-classes","slug":"design-great-classes","priority":0.775},{"title":"Documentation","benefit":5,"easiness":3,"order":2,"tags":["Clean Code"],"link":"/Learn--Clean-Code-With-Cpp/lessons/documentation","slug":"documentation","priority":0.775},{"title":"Make it work, then make it good","benefit":5,"easiness":3,"order":2,"tags":["Workflow"],"link":"/Learn--Clean-Code-With-Cpp/lessons/make-it-work-then-make-it-good","slug":"make-it-work-then-make-it-good","priority":0.775},{"title":"Stack vs Heap","benefit":5,"easiness":3,"order":2,"tags":["Performant Code"],"link":"/Learn--Clean-Code-With-Cpp/lessons/stack-vs-heap","slug":"stack-vs-heap","priority":0.775},{"title":"Write small functions","benefit":5,"easiness":3,"order":2,"tags":["Clean Code"],"link":"/Learn--Clean-Code-With-Cpp/lessons/write-small-functions","slug":"write-small-functions","priority":0.775},{"title":"assert","benefit":4,"easiness":5,"order":2,"tags":["Clean Code"],"link":"/Learn--Clean-Code-With-Cpp/lessons/assert","slug":"assert","priority":0.7625000000000001},{"title":"auto","benefit":4,"easiness":5,"order":2,"tags":["Beautiful Code","Clean Code","C++"],"link":"/Learn--Clean-Code-With-Cpp/lessons/auto","slug":"auto","priority":0.7625000000000001},{"title":"Enums","benefit":4,"easiness":5,"order":2,"tags":["Clean Code","C++"],"link":"/Learn--Clean-Code-With-Cpp/lessons/enums","slug":"enums","priority":0.7625000000000001},{"title":"Lambda functions","benefit":4,"easiness":4,"order":2,"tags":["Clean Code","C++"],"link":"/Learn--Clean-Code-With-Cpp/lessons/lambda","slug":"lambda","priority":0.75},{"title":"Master your IDE","benefit":4,"easiness":4,"order":2,"tags":["Tools"],"link":"/Learn--Clean-Code-With-Cpp/lessons/master-your-ide","slug":"master-your-ide","priority":0.75},{"title":"std::optional","benefit":4,"easiness":4,"order":2,"tags":["Clean Code","C++"],"link":"/Learn--Clean-Code-With-Cpp/lessons/optional","slug":"optional","priority":0.75},{"title":"std::string and std::string_view","benefit":4,"easiness":4,"order":2,"tags":["C++"],"link":"/Learn--Clean-Code-With-Cpp/lessons/string-and-string-view","slug":"string-and-string-view","priority":0.75},{"title":"const","benefit":4,"easiness":3,"order":2,"tags":["Clean Code","C++"],"link":"/Learn--Clean-Code-With-Cpp/lessons/const","slug":"const","priority":0.7375},{"title":"Don\'t overfocus on performance","benefit":4,"easiness":3,"order":2,"tags":["Clean Code"],"link":"/Learn--Clean-Code-With-Cpp/lessons/dont-overfocus-on-performance","slug":"dont-overfocus-on-performance","priority":0.7375},{"title":"STL algorithms","benefit":4,"easiness":3,"order":2,"tags":["Clean Code","Performant Code","C++"],"link":"/Learn--Clean-Code-With-Cpp/lessons/stl-algorithms","slug":"stl-algorithms","priority":0.7375},{"title":"Debug vs Release","benefit":3,"easiness":5,"order":2,"tags":["Clean Code"],"link":"/Learn--Clean-Code-With-Cpp/lessons/debug-vs-release","slug":"debug-vs-release","priority":0.7250000000000001},{"title":"Markdown","benefit":3,"easiness":5,"order":2,"tags":["Tools"],"link":"/Learn--Clean-Code-With-Cpp/lessons/markdown","slug":"markdown","priority":0.7250000000000001},{"title":"Range-based for loop","benefit":3,"easiness":5,"order":2,"tags":["Clean Code","C++"],"link":"/Learn--Clean-Code-With-Cpp/lessons/range-based-for-loop","slug":"range-based-for-loop","priority":0.7250000000000001},{"title":"Smart Pointers","benefit":3,"easiness":5,"order":2,"tags":["Clean Code","C++"],"link":"/Learn--Clean-Code-With-Cpp/lessons/smart-pointers","slug":"smart-pointers","priority":0.7250000000000001},{"title":"CMake","benefit":3,"easiness":3,"order":2,"tags":["C++"],"link":"/Learn--Clean-Code-With-Cpp/lessons/cmake","slug":"cmake","priority":0.7},{"title":"C++ casts","benefit":3,"easiness":3,"order":2,"tags":["Clean Code","C++"],"link":"/Learn--Clean-Code-With-Cpp/lessons/cpp-casts","slug":"cpp-casts","priority":0.7},{"title":"Prefer free functions","benefit":5,"easiness":3,"order":3,"tags":["Clean Code"],"link":"/Learn--Clean-Code-With-Cpp/lessons/free-functions","slug":"free-functions","priority":0.575},{"title":"Static analysis and Sanitizers","benefit":5,"easiness":3,"order":3,"tags":["Tools"],"link":"/Learn--Clean-Code-With-Cpp/lessons/static-analysis-and-sanitizers","slug":"static-analysis-and-sanitizers","priority":0.575},{"title":"Use libraries","benefit":5,"easiness":3,"order":3,"tags":["Clean Code"],"link":"/Learn--Clean-Code-With-Cpp/lessons/use-libraries","slug":"use-libraries","priority":0.575},{"title":"Watch conferences","benefit":5,"easiness":3,"order":3,"tags":["Workflow"],"link":"/Learn--Clean-Code-With-Cpp/lessons/watch-conferences","slug":"watch-conferences","priority":0.575},{"title":"Write libraries","benefit":5,"easiness":3,"order":3,"tags":["Clean Code"],"link":"/Learn--Clean-Code-With-Cpp/lessons/write-libraries","slug":"write-libraries","priority":0.575},{"title":"Dear ImGui","benefit":5,"easiness":2,"order":3,"tags":["Libraries & Frameworks"],"link":"/Learn--Clean-Code-With-Cpp/lessons/dear-imgui","slug":"dear-imgui","priority":0.5625},{"title":"Designated Initializers","benefit":4,"easiness":5,"order":3,"tags":["Clean Code","C++"],"link":"/Learn--Clean-Code-With-Cpp/lessons/designated_initializers","slug":"designated_initializers","priority":0.5625},{"title":"DRY: Don\'t repeat yourself","benefit":5,"easiness":2,"order":3,"tags":["Clean Code"],"link":"/Learn--Clean-Code-With-Cpp/lessons/dont-repeat-yourself","slug":"dont-repeat-yourself","priority":0.5625},{"title":"Orthogonality","benefit":5,"easiness":2,"order":3,"tags":["Clean Code"],"link":"/Learn--Clean-Code-With-Cpp/lessons/orthogonality","slug":"orthogonality","priority":0.5625},{"title":"Testing","benefit":5,"easiness":2,"order":3,"tags":["Clean Code"],"link":"/Learn--Clean-Code-With-Cpp/lessons/testing","slug":"testing","priority":0.5625},{"title":"Type design","benefit":5,"easiness":2,"order":3,"tags":["Clean Code"],"link":"/Learn--Clean-Code-With-Cpp/lessons/type-design","slug":"type-design","priority":0.5625},{"title":"Dependencies","benefit":5,"easiness":1,"order":3,"tags":["Clean Code"],"link":"/Learn--Clean-Code-With-Cpp/lessons/dependencies","slug":"dependencies","priority":0.55},{"title":"Single Source of Truth","benefit":4,"easiness":4,"order":3,"tags":["Clean Code"],"link":"/Learn--Clean-Code-With-Cpp/lessons/single-source-of-truth","slug":"single-source-of-truth","priority":0.55},{"title":"Strong Typing","benefit":4,"easiness":4,"order":3,"tags":["Clean Code"],"link":"/Learn--Clean-Code-With-Cpp/lessons/strong-typing","slug":"strong-typing","priority":0.55},{"title":"Code reviews","benefit":4,"easiness":3,"order":3,"tags":["Workflow"],"link":"/Learn--Clean-Code-With-Cpp/lessons/code-reviews","slug":"code-reviews","priority":0.5375},{"title":"Git submodules","benefit":4,"easiness":3,"order":3,"tags":["Tools","Git"],"link":"/Learn--Clean-Code-With-Cpp/lessons/git-submodules","slug":"git-submodules","priority":0.5375},{"title":"Static site generators","benefit":4,"easiness":3,"order":3,"tags":["Tools"],"link":"/Learn--Clean-Code-With-Cpp/lessons/static-site-generators","slug":"static-site-generators","priority":0.5375},{"title":"Composition over Inheritance","benefit":4,"easiness":2,"order":3,"tags":["Clean Code"],"link":"/Learn--Clean-Code-With-Cpp/lessons/composition-over-inheritance","slug":"composition-over-inheritance","priority":0.525},{"title":"Deleted functions","benefit":3,"easiness":5,"order":3,"tags":["Clean Code","C++"],"link":"/Learn--Clean-Code-With-Cpp/lessons/deleted-functions","slug":"deleted-functions","priority":0.525},{"title":"Immediately Invoked Function","benefit":3,"easiness":5,"order":3,"tags":["Clean Code"],"link":"/Learn--Clean-Code-With-Cpp/lessons/immediately-invoked-function","slug":"immediately-invoked-function","priority":0.525},{"title":"Error Handling","benefit":3,"easiness":4,"order":3,"tags":["Clean Code"],"link":"/Learn--Clean-Code-With-Cpp/lessons/error-handling","slug":"error-handling","priority":0.5125},{"title":"Git Pull Requests","benefit":3,"easiness":4,"order":3,"tags":["Tools","Git"],"link":"/Learn--Clean-Code-With-Cpp/lessons/git-pull-request","slug":"git-pull-request","priority":0.5125},{"title":"Advanced Git features","benefit":3,"easiness":3,"order":3,"tags":["Tools","Git"],"link":"/Learn--Clean-Code-With-Cpp/lessons/advanced-git-features","slug":"advanced-git-features","priority":0.5},{"title":"Functional programming","benefit":3,"easiness":3,"order":3,"tags":["Clean Code"],"link":"/Learn--Clean-Code-With-Cpp/lessons/functional-programming","slug":"functional-programming","priority":0.5},{"title":"Measuring performance","benefit":3,"easiness":3,"order":3,"tags":["Performant Code"],"link":"/Learn--Clean-Code-With-Cpp/lessons/measuring-performance","slug":"measuring-performance","priority":0.5},{"title":"Move semantics","benefit":3,"easiness":3,"order":3,"tags":["Performant Code","C++"],"link":"/Learn--Clean-Code-With-Cpp/lessons/move-semantics","slug":"move-semantics","priority":0.5},{"title":"Precompiled Header","benefit":3,"easiness":3,"order":3,"tags":["C++"],"link":"/Learn--Clean-Code-With-Cpp/lessons/precompiled-header","slug":"precompiled-header","priority":0.5},{"title":"State and Strategy","benefit":3,"easiness":3,"order":3,"tags":["Clean Code"],"link":"/Learn--Clean-Code-With-Cpp/lessons/state-and-strategy","slug":"state-and-strategy","priority":0.5},{"title":"std::variant","benefit":3,"easiness":3,"order":3,"tags":["Clean Code","Performant Code","C++"],"link":"/Learn--Clean-Code-With-Cpp/lessons/variant","slug":"variant","priority":0.5},{"title":"Cache and Branches","benefit":3,"easiness":2,"order":3,"tags":["Performant Code"],"link":"/Learn--Clean-Code-With-Cpp/lessons/cache-and-branches","slug":"cache-and-branches","priority":0.4875},{"title":"Linked lists","benefit":2,"easiness":5,"order":3,"tags":["Performant Code"],"link":"/Learn--Clean-Code-With-Cpp/lessons/linked-list","slug":"linked-list","priority":0.4875},{"title":"Multithreading","benefit":3,"easiness":2,"order":3,"tags":["Performant Code"],"link":"/Learn--Clean-Code-With-Cpp/lessons/multithreading","slug":"multithreading","priority":0.4875},{"title":"Polymorphism","benefit":3,"easiness":2,"order":3,"tags":["Clean Code"],"link":"/Learn--Clean-Code-With-Cpp/lessons/polymorphism","slug":"polymorphism","priority":0.4875},{"title":"Avoid dead code","benefit":2,"easiness":3,"order":3,"tags":["Clean Code"],"link":"/Learn--Clean-Code-With-Cpp/lessons/avoid-dead-code","slug":"avoid-dead-code","priority":0.4625},{"title":"Avoid nested namespaces","benefit":1,"easiness":5,"order":3,"tags":["Clean Code","C++"],"link":"/Learn--Clean-Code-With-Cpp/lessons/avoid-nested-namespaces","slug":"avoid-nested-namespaces","priority":0.45},{"title":"Pointers vs References","benefit":2,"easiness":2,"order":3,"tags":["Clean Code","C++"],"link":"/Learn--Clean-Code-With-Cpp/lessons/pointers-vs-references","slug":"pointers-vs-references","priority":0.45},{"title":"Type erasure","benefit":4,"easiness":2,"order":4,"tags":["Clean Code"],"link":"/Learn--Clean-Code-With-Cpp/lessons/type-erasure","slug":"type-erasure","priority":0.325},{"title":"wasm and electron","benefit":4,"easiness":2,"order":4,"tags":["Libraries & Frameworks"],"link":"/Learn--Clean-Code-With-Cpp/lessons/wasm-and-electron","slug":"wasm-and-electron","priority":0.325},{"title":"Scope guard","benefit":3,"easiness":4,"order":4,"tags":["Clean Code"],"link":"/Learn--Clean-Code-With-Cpp/lessons/scope-guard","slug":"scope-guard","priority":0.3125},{"title":"<random>","benefit":3,"easiness":3,"order":4,"tags":["C++"],"link":"/Learn--Clean-Code-With-Cpp/lessons/random","slug":"random","priority":0.30000000000000004},{"title":"The Rule of 5","benefit":3,"easiness":3,"order":4,"tags":["Clean Code","C++"],"link":"/Learn--Clean-Code-With-Cpp/lessons/rule-of-5","slug":"rule-of-5","priority":0.30000000000000004},{"title":"friend","benefit":1,"easiness":5,"order":4,"tags":["Clean Code","C++"],"link":"/Learn--Clean-Code-With-Cpp/lessons/friend","slug":"friend","priority":0.25},{"title":"#if defined()","benefit":1,"easiness":5,"order":4,"tags":["Beautiful Code","C++"],"link":"/Learn--Clean-Code-With-Cpp/lessons/if-defined","slug":"if-defined","priority":0.25},{"title":"Trailing return type","benefit":1,"easiness":5,"order":5,"tags":["Beautiful Code","C++"],"link":"/Learn--Clean-Code-With-Cpp/lessons/trailing-return-type","slug":"trailing-return-type","priority":0.05}]')}}]);