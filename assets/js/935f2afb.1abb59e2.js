"use strict";(self.webpackChunkteaching_toolbox_website_generator=self.webpackChunkteaching_toolbox_website_generator||[]).push([[53],{1109:function(e){e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"lessons":[{"type":"link","label":"Introduction","href":"/Learn--Cpp-And-Dev-Practices/lessons","docId":"lessons/introduction"},{"type":"link","label":"Use a debugger","href":"/Learn--Cpp-And-Dev-Practices/lessons/debugger","docId":"lessons/debugger"},{"type":"link","label":"Use an IDE","href":"/Learn--Cpp-And-Dev-Practices/lessons/use-an-ide","docId":"lessons/use-an-ide"},{"type":"link","label":"std::vector","href":"/Learn--Cpp-And-Dev-Practices/lessons/vector","docId":"lessons/vector"},{"type":"link","label":"Use Git","href":"/Learn--Cpp-And-Dev-Practices/lessons/use-git","docId":"lessons/use-git"},{"type":"link","label":"Use a formatting tool","href":"/Learn--Cpp-And-Dev-Practices/lessons/use-a-formatting-tool","docId":"lessons/use-a-formatting-tool"},{"type":"link","label":"Naming","href":"/Learn--Cpp-And-Dev-Practices/lessons/naming","docId":"lessons/naming"},{"type":"link","label":"Split problems in small pieces","href":"/Learn--Cpp-And-Dev-Practices/lessons/split-problems-in-small-pieces","docId":"lessons/split-problems-in-small-pieces"},{"type":"link","label":"Consistency in style","href":"/Learn--Cpp-And-Dev-Practices/lessons/consistency-in-style","docId":"lessons/consistency-in-style"},{"type":"link","label":"Design Great Classes","href":"/Learn--Cpp-And-Dev-Practices/lessons/design-great-classes","docId":"lessons/design-great-classes"},{"type":"link","label":"Documentation","href":"/Learn--Cpp-And-Dev-Practices/lessons/documentation","docId":"lessons/documentation"},{"type":"link","label":"Make it work, then make it good","href":"/Learn--Cpp-And-Dev-Practices/lessons/make-it-work-then-make-it-good","docId":"lessons/make-it-work-then-make-it-good"},{"type":"link","label":"Stack vs Heap","href":"/Learn--Cpp-And-Dev-Practices/lessons/stack-vs-heap","docId":"lessons/stack-vs-heap"},{"type":"link","label":"Write small functions","href":"/Learn--Cpp-And-Dev-Practices/lessons/write-small-functions","docId":"lessons/write-small-functions"},{"type":"link","label":"assert and static_assert","href":"/Learn--Cpp-And-Dev-Practices/lessons/assert","docId":"lessons/assert"},{"type":"link","label":"auto","href":"/Learn--Cpp-And-Dev-Practices/lessons/auto","docId":"lessons/auto"},{"type":"link","label":"Enums","href":"/Learn--Cpp-And-Dev-Practices/lessons/enums","docId":"lessons/enums"},{"type":"link","label":"Lambda functions","href":"/Learn--Cpp-And-Dev-Practices/lessons/lambda","docId":"lessons/lambda"},{"type":"link","label":"Master your IDE","href":"/Learn--Cpp-And-Dev-Practices/lessons/master-your-ide","docId":"lessons/master-your-ide"},{"type":"link","label":"std::optional","href":"/Learn--Cpp-And-Dev-Practices/lessons/optional","docId":"lessons/optional"},{"type":"link","label":"string and string_view","href":"/Learn--Cpp-And-Dev-Practices/lessons/string-and-string-view","docId":"lessons/string-and-string-view"},{"type":"link","label":"const","href":"/Learn--Cpp-And-Dev-Practices/lessons/const","docId":"lessons/const"},{"type":"link","label":"STL algorithms","href":"/Learn--Cpp-And-Dev-Practices/lessons/stl-algorithms","docId":"lessons/stl-algorithms"},{"type":"link","label":"Debug vs Release","href":"/Learn--Cpp-And-Dev-Practices/lessons/debug-vs-release","docId":"lessons/debug-vs-release"},{"type":"link","label":"Markdown","href":"/Learn--Cpp-And-Dev-Practices/lessons/markdown","docId":"lessons/markdown"},{"type":"link","label":"Range-based for loop","href":"/Learn--Cpp-And-Dev-Practices/lessons/range-based-for-loop","docId":"lessons/range-based-for-loop"},{"type":"link","label":"Smart Pointers","href":"/Learn--Cpp-And-Dev-Practices/lessons/smart-pointers","docId":"lessons/smart-pointers"},{"type":"link","label":"CMake","href":"/Learn--Cpp-And-Dev-Practices/lessons/cmake","docId":"lessons/cmake"},{"type":"link","label":"C++ casts","href":"/Learn--Cpp-And-Dev-Practices/lessons/cpp-casts","docId":"lessons/cpp-casts"},{"type":"link","label":"Prefer free functions","href":"/Learn--Cpp-And-Dev-Practices/lessons/free-functions","docId":"lessons/free-functions"},{"type":"link","label":"Static analysis and Sanitizers","href":"/Learn--Cpp-And-Dev-Practices/lessons/static-analysis-and-sanitizers","docId":"lessons/static-analysis-and-sanitizers"},{"type":"link","label":"Use libraries","href":"/Learn--Cpp-And-Dev-Practices/lessons/use-libraries","docId":"lessons/use-libraries"},{"type":"link","label":"Watch conferences","href":"/Learn--Cpp-And-Dev-Practices/lessons/watch-conferences","docId":"lessons/watch-conferences"},{"type":"link","label":"Write libraries","href":"/Learn--Cpp-And-Dev-Practices/lessons/write-libraries","docId":"lessons/write-libraries"},{"type":"link","label":"Dear ImGui","href":"/Learn--Cpp-And-Dev-Practices/lessons/dear-imgui","docId":"lessons/dear-imgui"},{"type":"link","label":"Designated Initializers","href":"/Learn--Cpp-And-Dev-Practices/lessons/designated_initializers","docId":"lessons/designated_initializers"},{"type":"link","label":"DRY : Don\'t repeat yourself","href":"/Learn--Cpp-And-Dev-Practices/lessons/dont-repeat-yourself","docId":"lessons/dont-repeat-yourself"},{"type":"link","label":"Orthogonality","href":"/Learn--Cpp-And-Dev-Practices/lessons/orthogonality","docId":"lessons/orthogonality"},{"type":"link","label":"Testing","href":"/Learn--Cpp-And-Dev-Practices/lessons/testing","docId":"lessons/testing"},{"type":"link","label":"Type design","href":"/Learn--Cpp-And-Dev-Practices/lessons/type-design","docId":"lessons/type-design"},{"type":"link","label":"Dependencies","href":"/Learn--Cpp-And-Dev-Practices/lessons/dependencies","docId":"lessons/dependencies"},{"type":"link","label":"Single Source of Truth","href":"/Learn--Cpp-And-Dev-Practices/lessons/single-source-of-truth","docId":"lessons/single-source-of-truth"},{"type":"link","label":"Strong Typing","href":"/Learn--Cpp-And-Dev-Practices/lessons/strong-typing","docId":"lessons/strong-typing"},{"type":"link","label":"Code reviews","href":"/Learn--Cpp-And-Dev-Practices/lessons/code-reviews","docId":"lessons/code-reviews"},{"type":"link","label":"Git submodules","href":"/Learn--Cpp-And-Dev-Practices/lessons/git-submodules","docId":"lessons/git-submodules"},{"type":"link","label":"Static site generators","href":"/Learn--Cpp-And-Dev-Practices/lessons/static-site-generators","docId":"lessons/static-site-generators"},{"type":"link","label":"Composition over Inheritance","href":"/Learn--Cpp-And-Dev-Practices/lessons/composition-over-inheritance","docId":"lessons/composition-over-inheritance"},{"type":"link","label":"Deleted functions","href":"/Learn--Cpp-And-Dev-Practices/lessons/deleted-functions","docId":"lessons/deleted-functions"},{"type":"link","label":"Immediately Invoked Lambda","href":"/Learn--Cpp-And-Dev-Practices/lessons/immediately-invoked-lambda","docId":"lessons/immediately-invoked-lambda"},{"type":"link","label":"Exceptions","href":"/Learn--Cpp-And-Dev-Practices/lessons/exceptions","docId":"lessons/exceptions"},{"type":"link","label":"Pull requests","href":"/Learn--Cpp-And-Dev-Practices/lessons/git-pull-request","docId":"lessons/git-pull-request"},{"type":"link","label":"Advanced git features","href":"/Learn--Cpp-And-Dev-Practices/lessons/advanced-git-features","docId":"lessons/advanced-git-features"},{"type":"link","label":"Functional programming","href":"/Learn--Cpp-And-Dev-Practices/lessons/functional-programming","docId":"lessons/functional-programming"},{"type":"link","label":"Measuring performance","href":"/Learn--Cpp-And-Dev-Practices/lessons/measuring-performance","docId":"lessons/measuring-performance"},{"type":"link","label":"Move semantics","href":"/Learn--Cpp-And-Dev-Practices/lessons/move-semantics","docId":"lessons/move-semantics"},{"type":"link","label":"Precompiled Header","href":"/Learn--Cpp-And-Dev-Practices/lessons/precompiled-header","docId":"lessons/precompiled-header"},{"type":"link","label":"State and Strategy","href":"/Learn--Cpp-And-Dev-Practices/lessons/state-and-strategy","docId":"lessons/state-and-strategy"},{"type":"link","label":"std::variant","href":"/Learn--Cpp-And-Dev-Practices/lessons/variant","docId":"lessons/variant"},{"type":"link","label":"Linked lists","href":"/Learn--Cpp-And-Dev-Practices/lessons/linked-list","docId":"lessons/linked-list"},{"type":"link","label":"Multithreading","href":"/Learn--Cpp-And-Dev-Practices/lessons/multithreading","docId":"lessons/multithreading"},{"type":"link","label":"Polymorphism","href":"/Learn--Cpp-And-Dev-Practices/lessons/polymorphism","docId":"lessons/polymorphism"},{"type":"link","label":"Trailing return type","href":"/Learn--Cpp-And-Dev-Practices/lessons/trailing-return-type","docId":"lessons/trailing-return-type"},{"type":"link","label":"Avoid dead code","href":"/Learn--Cpp-And-Dev-Practices/lessons/dead-code","docId":"lessons/dead-code"},{"type":"link","label":"Avoid nested namespaces","href":"/Learn--Cpp-And-Dev-Practices/lessons/against-nested-namespaces","docId":"lessons/against-nested-namespaces"},{"type":"link","label":"Pointers vs References","href":"/Learn--Cpp-And-Dev-Practices/lessons/pointer-vs-reference","docId":"lessons/pointer-vs-reference"},{"type":"link","label":"Type erasure","href":"/Learn--Cpp-And-Dev-Practices/lessons/type-erasure","docId":"lessons/type-erasure"},{"type":"link","label":"wasm and electron","href":"/Learn--Cpp-And-Dev-Practices/lessons/wasm-and-electron","docId":"lessons/wasm-and-electron"},{"type":"link","label":"Scope guard","href":"/Learn--Cpp-And-Dev-Practices/lessons/scope-guard","docId":"lessons/scope-guard"},{"type":"link","label":"Random","href":"/Learn--Cpp-And-Dev-Practices/lessons/random","docId":"lessons/random"},{"type":"link","label":"The Rule of 5","href":"/Learn--Cpp-And-Dev-Practices/lessons/rule-of-5","docId":"lessons/rule-of-5"},{"type":"link","label":"friend","href":"/Learn--Cpp-And-Dev-Practices/lessons/friend","docId":"lessons/friend"},{"type":"link","label":"#if defined()","href":"/Learn--Cpp-And-Dev-Practices/lessons/if-defined","docId":"lessons/if-defined"},{"type":"link","label":"performance-cache-and-branches","href":"/Learn--Cpp-And-Dev-Practices/lessons/performance-cache-and-branches","docId":"lessons/performance-cache-and-branches"}],"students":[{"type":"link","label":"Introduction","href":"/Learn--Cpp-And-Dev-Practices/students","docId":"students/introduction"},{"type":"link","label":"Hortense H","href":"/Learn--Cpp-And-Dev-Practices/students/hortense_h","docId":"students/hortense_h"},{"type":"link","label":"Jean-Michel P","href":"/Learn--Cpp-And-Dev-Practices/students/jean-michel_p","docId":"students/jean-michel_p"},{"type":"link","label":"Jules F","href":"/Learn--Cpp-And-Dev-Practices/students/jules_f","docId":"students/jules_f"}],"assignment":[{"type":"link","label":"Introduction","href":"/Learn--Cpp-And-Dev-Practices/assignment","docId":"assignment/introduction"},{"type":"link","label":"Setting up a project","href":"/Learn--Cpp-And-Dev-Practices/assignment/project-setup","docId":"assignment/project-setup"},{"type":"link","label":"Guess the number","href":"/Learn--Cpp-And-Dev-Practices/assignment/guess-the-number","docId":"assignment/guess-the-number"},{"type":"link","label":"Hangman","href":"/Learn--Cpp-And-Dev-Practices/assignment/hangman","docId":"assignment/hangman"},{"type":"link","label":"Adding a menu","href":"/Learn--Cpp-And-Dev-Practices/assignment/adding-a-menu","docId":"assignment/adding-a-menu"},{"type":"link","label":"Noughts and Crosses","href":"/Learn--Cpp-And-Dev-Practices/assignment/noughts-and-crosses","docId":"assignment/noughts-and-crosses"},{"type":"link","label":"connect-4","href":"/Learn--Cpp-And-Dev-Practices/assignment/connect-4","docId":"assignment/connect-4"},{"type":"link","label":"Adding tests","href":"/Learn--Cpp-And-Dev-Practices/assignment/adding-tests","docId":"assignment/adding-tests"},{"type":"link","label":"An AI for Hangman","href":"/Learn--Cpp-And-Dev-Practices/assignment/ai-for-hangman","docId":"assignment/ai-for-hangman"},{"type":"link","label":"Going further","href":"/Learn--Cpp-And-Dev-Practices/assignment/going-further","docId":"assignment/going-further"}]},"docs":{"assignment/adding-a-menu":{"id":"assignment/adding-a-menu","title":"Adding a menu","description":"Before moving on to our third game, we will add a menu that allows the user to pick the game they want to play:","sidebar":"assignment"},"assignment/adding-tests":{"id":"assignment/adding-tests","title":"Adding tests","description":"We will go back to our Hangman game and add a few tests. Tests are very important and a huge part of the job of every developer. To learn why tests are so great and how to write them, first read the lesson.","sidebar":"assignment"},"assignment/ai-for-hangman":{"id":"assignment/ai-for-hangman","title":"An AI for Hangman","description":"Now we want to write a program that plays Hangman by itself.","sidebar":"assignment"},"assignment/connect-4":{"id":"assignment/connect-4","title":"connect-4","description":"","sidebar":"assignment"},"assignment/going-further":{"id":"assignment/going-further","title":"Going further","description":"If you finished all the tutorials and still want to keep coding, now is a good time to decide by yourself what you want to add next to your project \ud83d\ude01","sidebar":"assignment"},"assignment/guess-the-number":{"id":"assignment/guess-the-number","title":"Guess the number","description":"Our first game will be very simple","sidebar":"assignment"},"assignment/hangman":{"id":"assignment/hangman","title":"Hangman","description":"Our second game will be Hangman. The program picks a random word, and the player must find it. They enter letters ony by one","sidebar":"assignment"},"assignment/introduction":{"id":"assignment/introduction","title":"Introduction","description":"\\"Passe-moi le code !\\"","sidebar":"assignment"},"assignment/noughts-and-crosses":{"id":"assignment/noughts-and-crosses","title":"Noughts and Crosses","description":"Today is a big day because for our third game we are leaving the console behind! We will display some actual graphics and the user will be able to click on the window to play!","sidebar":"assignment"},"assignment/project-setup":{"id":"assignment/project-setup","title":"Setting up a project","description":"Git","sidebar":"assignment"},"lessons/advanced-git-features":{"id":"lessons/advanced-git-features","title":"Advanced git features","description":"Amend","sidebar":"lessons"},"lessons/against-nested-namespaces":{"id":"lessons/against-nested-namespaces","title":"Avoid nested namespaces","description":"https://youtu.be/xu7q8dGvuwk?t=1198","sidebar":"lessons"},"lessons/assert":{"id":"lessons/assert","title":"assert and static_assert","description":"","sidebar":"lessons"},"lessons/auto":{"id":"lessons/auto","title":"auto","description":"Most of the time the type of a variable is obvious and a type declaration would be redundant. In such cases you can use auto instead :","sidebar":"lessons"},"lessons/cmake":{"id":"lessons/cmake","title":"CMake","description":"Brief","sidebar":"lessons"},"lessons/code-reviews":{"id":"lessons/code-reviews","title":"Code reviews","description":"https://youtu.be/ta3S8CRN2TM?t=878","sidebar":"lessons"},"lessons/composition-over-inheritance":{"id":"lessons/composition-over-inheritance","title":"Composition over Inheritance","description":"https://youtu.be/Rs9ykyFlebU?t=2177","sidebar":"lessons"},"lessons/consistency-in-style":{"id":"lessons/consistency-in-style","title":"Consistency in style","description":"Be consistent with the conventions you choose (e.g. camelCase vs snake_case, prefix of member variables etc.)","sidebar":"lessons"},"lessons/const":{"id":"lessons/const","title":"const","description":"Bonus trick","sidebar":"lessons"},"lessons/cpp-casts":{"id":"lessons/cpp-casts","title":"C++ casts","description":"5 min","sidebar":"lessons"},"lessons/dead-code":{"id":"lessons/dead-code","title":"Avoid dead code","description":"Don\'t leave commented out blocks in your code.","sidebar":"lessons"},"lessons/dear-imgui":{"id":"lessons/dear-imgui","title":"Dear ImGui","description":"","sidebar":"lessons"},"lessons/debug-vs-release":{"id":"lessons/debug-vs-release","title":"Debug vs Release","description":"","sidebar":"lessons"},"lessons/debugger":{"id":"lessons/debugger","title":"Use a debugger","description":"If your code crashes, running it with a debugger will indicate you the exact place where it crashes. You will also be able to inspect the value of all the variables of the program, and see which functions were called before the one that caused the crash.","sidebar":"lessons"},"lessons/deleted-functions":{"id":"lessons/deleted-functions","title":"Deleted functions","description":"You can delete functions to prevent them from beeing used. This is mostly used to prevent a type from being copied ; for example std::sharedptr.","sidebar":"lessons"},"lessons/dependencies":{"id":"lessons/dependencies","title":"Dependencies","description":"Managing dependencies between the different parts of your application is probably the most difficult challenge as your codebase grows.","sidebar":"lessons"},"lessons/design-great-classes":{"id":"lessons/design-great-classes","title":"Design Great Classes","description":"First, do you need a class? What is the difference between a class and a struct?","sidebar":"lessons"},"lessons/designated_initializers":{"id":"lessons/designated_initializers","title":"Designated Initializers","description":"https://youtu.be/nm45t2fnUms","sidebar":"lessons"},"lessons/documentation":{"id":"lessons/documentation","title":"Documentation","description":"Document for users","sidebar":"lessons"},"lessons/dont-repeat-yourself":{"id":"lessons/dont-repeat-yourself","title":"DRY : Don\'t repeat yourself","description":"","sidebar":"lessons"},"lessons/enums":{"id":"lessons/enums","title":"Enums","description":"","sidebar":"lessons"},"lessons/exceptions":{"id":"lessons/exceptions","title":"Exceptions","description":"Despite their bad reputations, they are actually pretty good and you should consider using them.","sidebar":"lessons"},"lessons/free-functions":{"id":"lessons/free-functions","title":"Prefer free functions","description":"Free functions help a lot with decoupling, code reuse, testing, etc.","sidebar":"lessons"},"lessons/friend":{"id":"lessons/friend","title":"friend","description":"There are *very few* good reasons to use `friend`.","sidebar":"lessons"},"lessons/functional-programming":{"id":"lessons/functional-programming","title":"Functional programming","description":"Functional programming is an important paradigm that has gotten a lot of attention recently (it took of long after Object Oriented programming). A lot of very good techniques have emerged from this field and have been incorporated in many languages, including C++. std::transform and many others are inherited from Functional Programming.","sidebar":"lessons"},"lessons/git-pull-request":{"id":"lessons/git-pull-request","title":"Pull requests","description":"(also known as merge requests in GitLab)","sidebar":"lessons"},"lessons/git-submodules":{"id":"lessons/git-submodules","title":"Git submodules","description":"","sidebar":"lessons"},"lessons/if-defined":{"id":"lessons/if-defined","title":"#if defined()","description":"#if defined(SOMETHING) offers more flexibility than #ifdef SOMETHING.","sidebar":"lessons"},"lessons/immediately-invoked-lambda":{"id":"lessons/immediately-invoked-lambda","title":"Immediately Invoked Lambda","description":"","sidebar":"lessons"},"lessons/introduction":{"id":"lessons/introduction","title":"Introduction","description":"Forewords","sidebar":"lessons"},"lessons/lambda":{"id":"lessons/lambda","title":"Lambda functions","description":"","sidebar":"lessons"},"lessons/linked-list":{"id":"lessons/linked-list","title":"Linked lists","description":"Linked lists are rarely usefull. All the theoretical advantages in insertion time and what not are actually murdered by the awfull cache coherency that make them actually very slow.","sidebar":"lessons"},"lessons/make-it-work-then-make-it-good":{"id":"lessons/make-it-work-then-make-it-good","title":"Make it work, then make it good","description":"","sidebar":"lessons"},"lessons/markdown":{"id":"lessons/markdown","title":"Markdown","description":"Markdown is an amazing markup language. Its main strength is its simplicity, and the other one is its omnipresence.","sidebar":"lessons"},"lessons/master-your-ide":{"id":"lessons/master-your-ide","title":"Master your IDE","description":"Use extensions","sidebar":"lessons"},"lessons/measuring-performance":{"id":"lessons/measuring-performance","title":"Measuring performance","description":"","sidebar":"lessons"},"lessons/move-semantics":{"id":"lessons/move-semantics","title":"Move semantics","description":"Brief","sidebar":"lessons"},"lessons/multithreading":{"id":"lessons/multithreading","title":"Multithreading","description":"","sidebar":"lessons"},"lessons/naming":{"id":"lessons/naming","title":"Naming","description":"Finding the right name sometimes gives you ideas of how to improve your design. For example I wanted a struct to hold a width and a height to represent the size of some images. I started calling it RectangleSize to be more generic, but when I realized it was more of an ImageSize, it helped me a lot ! Because then I added an invariant to that struct:optional instead, but then we will always have to check to see if it is nullopt.","sidebar":"lessons"},"lessons/optional":{"id":"lessons/optional","title":"std::optional","description":"https://youtu.be/ojZbFIQSdl8?t=1056","sidebar":"lessons"},"lessons/orthogonality":{"id":"lessons/orthogonality","title":"Orthogonality","description":"","sidebar":"lessons"},"lessons/performance-cache-and-branches":{"id":"lessons/performance-cache-and-branches","title":"performance-cache-and-branches","description":"https://youtu.be/EmzdmqUWq3o","sidebar":"lessons"},"lessons/pointer-vs-reference":{"id":"lessons/pointer-vs-reference","title":"Pointers vs References","description":"Pointers can be null","sidebar":"lessons"},"lessons/polymorphism":{"id":"lessons/polymorphism","title":"Polymorphism","description":"Static Polymorphism","sidebar":"lessons"},"lessons/precompiled-header":{"id":"lessons/precompiled-header","title":"Precompiled Header","description":"https://youtu.be/eSI4wctZUto","sidebar":"lessons"},"lessons/random":{"id":"lessons/random","title":"Random","description":"Stephan T. Lavavej, rand() Considered Harmful (30min)","sidebar":"lessons"},"lessons/range-based-for-loop":{"id":"lessons/range-based-for-loop","title":"Range-based for loop","description":"It helps you express your intent more clearly. If you want to go over each element once (which the case of most for loops) you can write :","sidebar":"lessons"},"lessons/rule-of-5":{"id":"lessons/rule-of-5","title":"The Rule of 5","description":"The Rule of 5 states that if you write a special member function (a.k.a. a destructor, a copy constructor, a copy assignment, a move constructor or a move assignment), then you need to write all 5 of them. They will not be generated by the compiler because if you define one explicitly this probably means that the default compiler-generated implementation is not good for any of them.","sidebar":"lessons"},"lessons/scope-guard":{"id":"lessons/scope-guard","title":"Scope guard","description":"Conference","sidebar":"lessons"},"lessons/single-source-of-truth":{"id":"lessons/single-source-of-truth","title":"Single Source of Truth","description":"The Single Source of Truth principle is very simple : only store an information once !","sidebar":"lessons"},"lessons/smart-pointers":{"id":"lessons/smart-pointers","title":"Smart Pointers","description":"No naked new : this doesn\'t mean no dynamic allocations, it just means they should always be done through a smart pointer or a container.","sidebar":"lessons"},"lessons/split-problems-in-small-pieces":{"id":"lessons/split-problems-in-small-pieces","title":"Split problems in small pieces","description":"Small classes, small functions","sidebar":"lessons"},"lessons/stack-vs-heap":{"id":"lessons/stack-vs-heap","title":"Stack vs Heap","description":"Good Reasons to use the heap :","sidebar":"lessons"},"lessons/state-and-strategy":{"id":"lessons/state-and-strategy","title":"State and Strategy","description":"Difference : State handles the changes itself, it is an implementation of a state machine. For Strategy, the decision of changing the strategy comes from the outside, it doesn\'t depend on what the current strategy is.","sidebar":"lessons"},"lessons/static-analysis-and-sanitizers":{"id":"lessons/static-analysis-and-sanitizers","title":"Static analysis and Sanitizers","description":"There are a lot of bugs and bad coding habits that can be caught by tools. It can really help you a lot to improve the quality of your code!","sidebar":"lessons"},"lessons/static-site-generators":{"id":"lessons/static-site-generators","title":"Static site generators","description":"","sidebar":"lessons"},"lessons/stl-algorithms":{"id":"lessons/stl-algorithms","title":"STL algorithms","description":"","sidebar":"lessons"},"lessons/string-and-string-view":{"id":"lessons/string-and-string-view","title":"string and string_view","description":"","sidebar":"lessons"},"lessons/strong-typing":{"id":"lessons/strong-typing","title":"Strong Typing","description":"Brief","sidebar":"lessons"},"lessons/testing":{"id":"lessons/testing","title":"Testing","description":"https://youtu.be/ta3S8CRN2TM?t=1306","sidebar":"lessons"},"lessons/trailing-return-type":{"id":"lessons/trailing-return-type","title":"Trailing return type","description":"","sidebar":"lessons"},"lessons/type-design":{"id":"lessons/type-design","title":"Type design","description":"About types to model a concept","sidebar":"lessons"},"lessons/type-erasure":{"id":"lessons/type-erasure","title":"Type erasure","description":"https://youtu.be/jKt6A3wnDyI","sidebar":"lessons"},"lessons/use-a-formatting-tool":{"id":"lessons/use-a-formatting-tool","title":"Use a formatting tool","description":"Brief","sidebar":"lessons"},"lessons/use-an-ide":{"id":"lessons/use-an-ide","title":"Use an IDE","description":"An IDE (Integrated Development Environment) is like a text editor, but better! It has a lot of additional functionalities that will help you write, run and debug your code!","sidebar":"lessons"},"lessons/use-git":{"id":"lessons/use-git","title":"Use Git","description":"git is probably the most important tool of all in your programmer\'s toolbelt! It is a giant history of all the changes you ever made to your code. It is also very powerful to work with others and get organized.","sidebar":"lessons"},"lessons/use-libraries":{"id":"lessons/use-libraries","title":"Use libraries","description":"Build from source","sidebar":"lessons"},"lessons/variant":{"id":"lessons/variant","title":"std::variant","description":"https://youtu.be/ojZbFIQSdl8?t=869","sidebar":"lessons"},"lessons/vector":{"id":"lessons/vector","title":"std::vector","description":"Despite its awfull name, this is the most amazing container ever !","sidebar":"lessons"},"lessons/wasm-and-electron":{"id":"lessons/wasm-and-electron","title":"wasm and electron","description":"","sidebar":"lessons"},"lessons/watch-conferences":{"id":"lessons/watch-conferences","title":"Watch conferences","description":"This is the best away to improve once you have acquired a solid basis through classes and projects.","sidebar":"lessons"},"lessons/write-libraries":{"id":"lessons/write-libraries","title":"Write libraries","description":"Even if it\'s only for your personal use, it will help you a lot with code reuse across projects and also inside one project. And also it will force you to make your code a little more generic, which most of the time will improve it at the same time. Moreover, it will make sure that the code is decoupled from the rest of your application.","sidebar":"lessons"},"lessons/write-small-functions":{"id":"lessons/write-small-functions","title":"Write small functions","description":"Brief","sidebar":"lessons"},"students/hortense_h":{"id":"students/hortense_h","title":"Hortense H","description":"<SkillsTable","sidebar":"students"},"students/introduction":{"id":"students/introduction","title":"Introduction","description":"Welcome! In this section you will be able to see your progress live, your current grade, and the next skills that you can learn. Each student has their own page which I will update regularly with the skills that I have validated.","sidebar":"students"},"students/jean-michel_p":{"id":"students/jean-michel_p","title":"Jean-Michel P","description":"<SkillsTable","sidebar":"students"},"students/jules_f":{"id":"students/jules_f","title":"Jules F","description":"<SkillsTable","sidebar":"students"}}}')}}]);