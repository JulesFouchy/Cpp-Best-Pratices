"use strict";(self.webpackChunklearn_cpp_and_dev_practices=self.webpackChunklearn_cpp_and_dev_practices||[]).push([[3215],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=u(n),d=r,h=m["".concat(s,".").concat(d)]||m[d]||p[d]||o;return n?a.createElement(h,i(i({ref:t},c),{},{components:n})):a.createElement(h,i({ref:t},c))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var u=2;u<o;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},691:function(e,t,n){n.d(t,{Z:function(){return r}});var a=n(7294);function r(e){var t="https://github.com/JulesFouchy/Learn--Cpp-And-Dev-Practices--Project/commit/"+e.hash;return a.createElement("a",{href:t,target:"_blank"},a.createElement("i",null,"Commit"))}},5175:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return u},contentTitle:function(){return c},metadata:function(){return p},toc:function(){return m},default:function(){return h}});var a=n(2122),r=n(9756),o=(n(7294),n(3905)),i=n(1195),l=n(691),s=["components"],u={title:"Hangman"},c=void 0,p={unversionedId:"assignment/hangman",id:"assignment/hangman",isDocsHomePage:!1,title:"Hangman",description:"Our second game will be Hangman. The program picks a random word, and the player must find it. They enter letters ony by one",source:"@site/docs/assignment/03-hangman.md",sourceDirName:"assignment",slug:"/assignment/hangman",permalink:"/Learn--Cpp-And-Dev-Practices/docs/assignment/hangman",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Hangman"},sidebar:"assignment",previous:{title:"Guess the number",permalink:"/Learn--Cpp-And-Dev-Practices/docs/assignment/guess-the-number"},next:{title:"tic-tac-toe",permalink:"/Learn--Cpp-And-Dev-Practices/docs/assignment/tic-tac-toe"}},m=[{value:"The building blocks",id:"the-building-blocks",children:[]},{value:"Picking a random word",id:"picking-a-random-word",children:[]},{value:"Getting an input from the user",id:"getting-an-input-from-the-user",children:[]},{value:"The state of the game",id:"the-state-of-the-game",children:[]},{value:"show_number_of_lives()",id:"show_number_of_lives",children:[]},{value:"player_is_alive()",id:"player_is_alive",children:[]}],d={toc:m};function h(e){var t=e.components,n=(0,r.Z)(e,s);return(0,o.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Our second game will be ",(0,o.kt)("em",{parentName:"p"},"Hangman"),". The program picks a random word, and the player must find it. They enter letters ony by one: if they are in the word, then they are revealed, otherwise the player loses one life. They lose when they have no more lives, and they win if they find all letters of the word. Here is an example:"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"\u2190 You have 8 lives",(0,o.kt)("br",null),"\n\u2190 ","_"," ","_"," ","_"," ","_",(0,o.kt)("br",null),"\n\u2192 e",(0,o.kt)("br",null),"\n\u2190 Correct!",(0,o.kt)("br",null),"\n\u2190 You have 8 lives",(0,o.kt)("br",null),"\n\u2190 ","_"," ","_"," ","_"," e",(0,o.kt)("br",null),"\n\u2192 m",(0,o.kt)("br",null),"\n\u2190 Nope!",(0,o.kt)("br",null),"\n\u2190 You have 7 lives",(0,o.kt)("br",null),"\n\u2190 ","_"," ","_"," ","_"," e",(0,o.kt)("br",null),"\n\u2192 c",(0,o.kt)("br",null),"\n\u2190 Correct!",(0,o.kt)("br",null),"\n\u2190 You have 7 lives",(0,o.kt)("br",null),"\n\u2190 c ","_"," ","_"," e",(0,o.kt)("br",null),"\n\u2192 o",(0,o.kt)("br",null),"\n\u2190 Correct!",(0,o.kt)("br",null),"\n\u2190 You have 7 lives",(0,o.kt)("br",null),"\n\u2190 c o ","_"," e",(0,o.kt)("br",null),"\n\u2192 d",(0,o.kt)("br",null),"\n\u2190 Congrats, you won!",(0,o.kt)("br",null),'\n\u2190 The word was "code"',(0,o.kt)("br",null))),(0,o.kt)(i.ZP,{mdxType:"TipTryNotToRead"}),(0,o.kt)("h2",{id:"the-building-blocks"},"The building blocks"),(0,o.kt)("p",null,"We will first write the global logic of our game, and will then implement each function one by one:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"pick_a_word_to_guess();\nwhile (player_is_alive() && !player_has_won()) {\n    show_number_of_lives();\n    show_word_to_guess_with_holes();\n    const auto guess = get_char_from_user();\n    if (word_to_guess_contains(guess)) {\n        mark_as_guessed(guess);\n    }\n    else {\n        remove_one_life();\n    }\n}\nif (player_has_won()) {\n    show_congrats_message();\n}\nelse {\n    show_death_message();\n}\n")),(0,o.kt)("p",null,"It should look like that in the end (even though we will probably have to modify it a bit as we write our code)"),(0,o.kt)("h2",{id:"picking-a-random-word"},"Picking a random word"),(0,o.kt)("p",null,"You might be able to reuse what we did for the last game where we needed a random int. If you do so, you will need to move the ",(0,o.kt)("inlineCode",{parentName:"p"},"rand()")," code to it's own file so that it can be included both in ",(0,o.kt)("em",{parentName:"p"},"Guess the Number")," and ",(0,o.kt)("em",{parentName:"p"},"Hangman"),"."),(0,o.kt)("p",null,"You can use a hardcoded list of words like:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <array>\n\nconst char* pick_a_random_word() \n{\n    static constexpr std::array words = { \n        "code", \n        "crous", \n        "imac", \n        "opengl", \n    };\n \n    // TODO: return a random element from the array\n} \n')),(0,o.kt)(l.Z,{hash:"63ffa3454105ab89900143695485a768aaf30e55",mdxType:"CommitLink"}),(0,o.kt)("br",null),(0,o.kt)("br",null),(0,o.kt)("p",null,"NB: you might also need to turn ",(0,o.kt)("inlineCode",{parentName:"p"},"rand()")," into a template in order to be able to use it with other types of integers like ",(0,o.kt)("inlineCode",{parentName:"p"},"size_t")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"uint32_t"),"."),(0,o.kt)(l.Z,{hash:"16a4076071420a2c6c9ed1188420d7364fb6c748",mdxType:"CommitLink"}),(0,o.kt)("h2",{id:"getting-an-input-from-the-user"},"Getting an input from the user"),(0,o.kt)("p",null,"The code is gonna be very similar to what we did in the last game, except that we want a ",(0,o.kt)("inlineCode",{parentName:"p"},"char")," instead of an ",(0,o.kt)("inlineCode",{parentName:"p"},"int"),". It might be time to generalize that code with a ",(0,o.kt)("em",{parentName:"p"},"template"),"!"),(0,o.kt)("p",null,"First, let's move ",(0,o.kt)("inlineCode",{parentName:"p"},"get_int_from_user()")," into its own ",(0,o.kt)("em",{parentName:"p"},"get_input_from_user.h")," file."),(0,o.kt)(l.Z,{hash:"36046efb9e335e8eef972a0afc9b82a894a83e0d",mdxType:"CommitLink"}),(0,o.kt)("br",null),(0,o.kt)("br",null),(0,o.kt)("p",null,"Then we can turn it into a template, and rename it because it is not tied to integers anymore:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"/// Blocks until the user inputs something of type T in the console\ntemplate<typename T>\nT get_input_from_user() {\n    // TODO: replace int with T\n}\n")),(0,o.kt)(l.Z,{hash:"aa392e00c74b209f68d24ff89a33532b9b4e2e95",mdxType:"CommitLink"}),(0,o.kt)("h2",{id:"the-state-of-the-game"},"The state of the game"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Now we will ask a difficult and fondamental question!")),(0,o.kt)("p",null,"Many functions we wrote in our pseudo-code need to have access to some state. For example ",(0,o.kt)("inlineCode",{parentName:"p"},"show_number_of_lives()")," needs to know the number of lives, ",(0,o.kt)("inlineCode",{parentName:"p"},"show_word_to_guess_with_holes()")," needs to know the word to guess and the letters that have already be found, and so on. So, how are we gonna give our functions access to this state?"),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"This is a complex question and there is no one true answer, so feel free to ponder and find your own \ud83e\udd70"))),(0,o.kt)("p",null,"One answer might be that we will make a class which will have all the state as member variables, and that our ",(0,o.kt)("inlineCode",{parentName:"p"},"show_number_of_lives()")," will be a member function. One problem with that approach is that now ",(0,o.kt)("inlineCode",{parentName:"p"},"show_number_of_lives()")," also has access to variables it doesn't need like the word to guess and the letters that have already be found. It is as if we wrote ",(0,o.kt)("inlineCode",{parentName:"p"},"show_number_of_lives(int number_of_lives, const std::string& word_to_guess, const std::vector<char>& letters_that_have_been_found)"),", giving three parameters to our function even though it only needs one."),(0,o.kt)("p",null,"The solution that I suggest is that we write all of them as free functions, taking only the parameters they need. We will then have our state in a struct and only pass the required parts of our state to the different functions. (See ",(0,o.kt)("a",{parentName:"p",href:"../lessons/free-functions"},"Prefer free functions"),")"),(0,o.kt)("p",null,"So, what do we put in our state? Well, I guess we will see as we implement each function \ud83d\ude09"),(0,o.kt)("h2",{id:"show_number_of_lives"},"show_number_of_lives()"),(0,o.kt)("p",null,"This function only needs the number of lives, so its signature will be"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"void show_number_of_lives(int number_of_lives) {\n    // TODO\n}\n")),(0,o.kt)(l.Z,{hash:"328230726b2a03f6a2d3697e315f1d60027e637f",mdxType:"CommitLink"}),(0,o.kt)("h2",{id:"player_is_alive"},"player_is_alive()"),(0,o.kt)("p",null,"The signature of this function will be"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},'bool player_is_alive(int number_of_lives) {\n    // TODO\n}\n\n<CommitLink hash="39784edef20238fbd646058d9ca63fc1928314eb"/>\n')))}h.isMDXComponent=!0},1195:function(e,t,n){n.d(t,{ZP:function(){return s}});var a=n(2122),r=n(9756),o=(n(7294),n(3905)),i=["components"],l={toc:[]};function s(e){var t=e.components,n=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"I encourage you to first try to code without reading the guided steps that follow! Think of the different functions that you need to write, and try to implement them!",(0,o.kt)("br",null),"\nOnly when you are stuck are you allowed to keep reading \ud83d\ude09 And read only enough to get unstuck! Then try to keep coding by yourself \ud83d\ude01 (until you are stuck again)"))))}s.isMDXComponent=!0}}]);