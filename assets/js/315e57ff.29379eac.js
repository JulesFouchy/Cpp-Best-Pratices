"use strict";(self.webpackChunkteaching_toolbox_website_generator=self.webpackChunkteaching_toolbox_website_generator||[]).push([[8168],{4137:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return g}});var s=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);n&&(s=s.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,s)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,s,i=function(e,n){if(null==e)return{};var t,s,i={},a=Object.keys(e);for(s=0;s<a.length;s++)t=a[s],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(s=0;s<a.length;s++)t=a[s],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=s.createContext({}),d=function(e){var n=s.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},p=function(e){var n=d(e.components);return s.createElement(l.Provider,{value:n},e.children)},C={inlineCode:"code",wrapper:function(e){var n=e.children;return s.createElement(s.Fragment,{},n)}},u=s.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=d(t),g=i,c=u["".concat(l,".").concat(g)]||u[g]||C[g]||a;return t?s.createElement(c,r(r({ref:n},p),{},{components:t})):s.createElement(c,r({ref:n},p))}));function g(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,r=new Array(a);r[0]=u;var o={};for(var l in n)hasOwnProperty.call(n,l)&&(o[l]=n[l]);o.originalType=e,o.mdxType="string"==typeof e?e:i,r[1]=o;for(var d=2;d<a;d++)r[d]=t[d];return s.createElement.apply(null,r)}return s.createElement.apply(null,t)}u.displayName="MDXCreateElement"},8442:function(e,n,t){t.d(n,{Z:function(){return a}});var s=t(7294),i=t(4820);function a(e){var n=e.slug,t=e.text,a=e.anchor,r=i.find((function(e){return e.slug===n}));if(void 0===r)throw console.error('Broken link to inexistant lesson "'+n+'"'),"";return s.createElement("a",{href:r.link+(a||"")},t||r.title)}},1114:function(e,n,t){t.d(n,{Z:function(){return i}});var s=t(7294);function i(e){var n="https://github.com/JulesFouchy/Learn--Clean-Code-With-Cpp--Project/commit/"+e.hash;return s.createElement("a",{href:n,target:"_blank"},s.createElement("i",null,"Commit"))}},6129:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return p},contentTitle:function(){return C},metadata:function(){return u},toc:function(){return g},default:function(){return f}});var s=t(7462),i=t(3366),a=(t(7294),t(4137)),r=t(6894),o=t(1114),l=t(8442),d=["components"],p={title:"Adding a menu"},C=void 0,u={unversionedId:"assignment/adding-a-menu",id:"assignment/adding-a-menu",title:"Adding a menu",description:"Before moving on to our third game, we will add a menu that allows the user to pick the game they want to play:",source:"@site/../../content/assignment/04-adding-a-menu.md",sourceDirName:"assignment",slug:"/assignment/adding-a-menu",permalink:"/Learn--Clean-Code-With-Cpp/assignment/adding-a-menu",tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"Adding a menu"},sidebar:"assignment",previous:{title:"Hangman",permalink:"/Learn--Clean-Code-With-Cpp/assignment/hangman"},next:{title:"Noughts and Crosses",permalink:"/Learn--Clean-Code-With-Cpp/assignment/noughts-and-crosses"}},g=[{value:"Skeleton",id:"skeleton",children:[],level:2},{value:"Bonus",id:"bonus",children:[],level:2},{value:"Refactoring",id:"refactoring",children:[],level:2}],c={toc:g};function f(e){var n=e.components,t=(0,i.Z)(e,d);return(0,a.kt)("wrapper",(0,s.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Before moving on to our third game, we will add a menu that allows the user to pick the game they want to play:"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"\u2190 What do you want to do?",(0,a.kt)("br",null),'\n\u2190 1: Play "Guess the Number"',(0,a.kt)("br",null),'\n\u2190 2: Play "Hangman"',(0,a.kt)("br",null),"\n\u2190 q: Quit",(0,a.kt)("br",null),"\n\u2192 a",(0,a.kt)("br",null),"\n\u2190 Sorry I don't know that command!",(0,a.kt)("br",null),"\n\u2192 1",(0,a.kt)("br",null),"\n\u2190 // The game starts playing . . .")),(0,a.kt)(r.ZP,{mdxType:"TipTryNotToRead"}),(0,a.kt)("h2",{id:"skeleton"},"Skeleton"),(0,a.kt)("p",null,"Here is a skeleton to help you:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"int main()\n{\n    bool quit = false;\n    while (!quit) {\n        show_the_list_of_commands(); // TODO: implement this function\n        const auto command = get_input_from_user<char>();\n        // TODO: handle the different possible values of command with a switch\n        // NB: don't forget to handle the case of an invalid command!\n    }\n}\n")),(0,a.kt)(o.Z,{hash:"2dbe98c7c49f38a9af013a5b17df8e6079f6c78a",mdxType:"CommitLink"}),(0,a.kt)("h2",{id:"bonus"},"Bonus"),(0,a.kt)("p",null,"Something that is a little annoying is that we have to make sure we don't mess up between what we say in ",(0,a.kt)("inlineCode",{parentName:"p"},"show_the_list_of_commands()")," and what we actually implement in our switch. Imagine we want to change the command for a given game: we need to change it in two places, that's bad!",(0,a.kt)("sup",{parentName:"p",id:"fnref-1"},(0,a.kt)("a",{parentName:"sup",href:"#fn-1",className:"footnote-ref"},"1"))," Can you think of a way to make the code more robust and easier to change?"),(0,a.kt)("details",null,(0,a.kt)("summary",null,"Hint"),"You could define a ",(0,a.kt)("code",null,"Game")," struct that would contain the name of the game as a string and the function you need to call to start the game. Then you can associate a distinct command to each game by storing the game in a map (or an array if you only plan to use numbers: the index of the game will correspond to its command)."),(0,a.kt)(o.Z,{hash:"f63f3317faf40baa9ffbf1dadf3b066fe1065711",mdxType:"CommitLink"}),(0,a.kt)("h2",{id:"refactoring"},"Refactoring"),(0,a.kt)("p",null,"As usual, move the code to its own file in order to clean up ",(0,a.kt)("em",{parentName:"p"},"main.cpp"),"."),(0,a.kt)(o.Z,{hash:"c0eb2ced7cfbd8c2d5b0e8a56549e5224b344c28",mdxType:"CommitLink"}),(0,a.kt)("div",{className:"footnotes"},(0,a.kt)("hr",{parentName:"div"}),(0,a.kt)("ol",{parentName:"div"},(0,a.kt)("li",{parentName:"ol",id:"fn-1"},"We are duplicating knowledge and violating the ",(0,a.kt)("em",{parentName:"li"},"DRY")," principle (see ",(0,a.kt)(l.Z,{slug:"dont-repeat-yourself",mdxType:"LessonLink"}),")",(0,a.kt)("a",{parentName:"li",href:"#fnref-1",className:"footnote-backref"},"\u21a9")))))}f.isMDXComponent=!0},6894:function(e,n,t){t.d(n,{ZP:function(){return l}});var s=t(7462),i=t(3366),a=(t(7294),t(4137)),r=["components"],o={toc:[]};function l(e){var n=e.components,t=(0,i.Z)(e,r);return(0,a.kt)("wrapper",(0,s.Z)({},o,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"I encourage you to first try to code without reading the guided steps that follow! Think of the different functions that you need to write, and try to implement them!",(0,a.kt)("br",null),"\nOnly when you are stuck are you allowed to keep reading \ud83d\ude09 And read only enough to get unstuck! Then try to keep coding by yourself \ud83d\ude01 (until you are stuck again)"))))}l.isMDXComponent=!0},4820:function(e){e.exports=JSON.parse('[{"title":"Use an IDE","benefit":5,"easiness":5,"order":1,"tags":["Tools"],"link":"/Learn--Clean-Code-With-Cpp/lessons/ide","slug":"ide","priority":1},{"title":"Use Git","benefit":5,"easiness":4,"order":1,"bias":1,"tags":["Tools","Git"],"link":"/Learn--Clean-Code-With-Cpp/lessons/git","slug":"git","priority":0.9875},{"title":"Use a debugger","benefit":5,"easiness":4,"order":1,"tags":["Tools"],"link":"/Learn--Clean-Code-With-Cpp/lessons/debugger","slug":"debugger","priority":0.9875},{"title":"Use a formatting tool","benefit":5,"easiness":4,"order":1,"tags":["Tools"],"link":"/Learn--Clean-Code-With-Cpp/lessons/formatting-tool","slug":"formatting-tool","priority":0.9875},{"title":"Static analysis and Sanitizers","benefit":5,"easiness":3,"order":1,"tags":["Tools"],"link":"/Learn--Clean-Code-With-Cpp/lessons/static-analysis-and-sanitizers","slug":"static-analysis-and-sanitizers","priority":0.975},{"title":"Naming","benefit":5,"easiness":1,"order":1,"tags":["Clean Code"],"link":"/Learn--Clean-Code-With-Cpp/lessons/naming","slug":"naming","priority":0.95},{"title":"Consistency in style","benefit":2,"easiness":5,"order":1,"tags":["Beautiful Code"],"link":"/Learn--Clean-Code-With-Cpp/lessons/consistency-in-style","slug":"consistency-in-style","priority":0.8875000000000001},{"title":"Prefer free functions","benefit":5,"easiness":3,"order":2,"bias":5,"tags":["Clean Code"],"link":"/Learn--Clean-Code-With-Cpp/lessons/free-functions","slug":"free-functions","priority":0.775},{"title":"Design Great Classes","benefit":5,"easiness":3,"order":2,"bias":4,"tags":["Clean Code"],"link":"/Learn--Clean-Code-With-Cpp/lessons/design-great-classes","slug":"design-great-classes","priority":0.775},{"title":"When to use structs","benefit":5,"easiness":3,"order":2,"bias":3,"tags":["Clean Code"],"link":"/Learn--Clean-Code-With-Cpp/lessons/when-to-use-structs","slug":"when-to-use-structs","priority":0.775},{"title":"Write small functions","benefit":5,"easiness":3,"order":2,"bias":2,"tags":["Clean Code"],"link":"/Learn--Clean-Code-With-Cpp/lessons/write-small-functions","slug":"write-small-functions","priority":0.775},{"title":"Make it work, then make it good","benefit":5,"easiness":3,"order":2,"bias":1,"tags":["Workflow"],"link":"/Learn--Clean-Code-With-Cpp/lessons/make-it-work-then-make-it-good","slug":"make-it-work-then-make-it-good","priority":0.775},{"title":"DRY: Don\'t repeat yourself","benefit":5,"easiness":2,"order":2,"tags":["Clean Code"],"link":"/Learn--Clean-Code-With-Cpp/lessons/dont-repeat-yourself","slug":"dont-repeat-yourself","priority":0.7625000000000001},{"title":"Enums","benefit":4,"easiness":5,"order":2,"tags":["Clean Code"],"link":"/Learn--Clean-Code-With-Cpp/lessons/enums","slug":"enums","priority":0.7625000000000001},{"title":"Orthogonality","benefit":5,"easiness":2,"order":2,"tags":["Clean Code"],"link":"/Learn--Clean-Code-With-Cpp/lessons/orthogonality","slug":"orthogonality","priority":0.7625000000000001},{"title":"Split problems in small pieces","benefit":5,"easiness":1,"order":2,"tags":["Workflow"],"link":"/Learn--Clean-Code-With-Cpp/lessons/split-problems-in-small-pieces","slug":"split-problems-in-small-pieces","priority":0.75},{"title":"std::vector","benefit":5,"easiness":5,"order":3,"tags":["Clean Code","Performant Code","C++"],"link":"/Learn--Clean-Code-With-Cpp/lessons/vector","slug":"vector","priority":0.6},{"title":"Documentation","benefit":5,"easiness":3,"order":3,"tags":["Clean Code"],"link":"/Learn--Clean-Code-With-Cpp/lessons/documentation","slug":"documentation","priority":0.575},{"title":"Stack vs Heap","benefit":5,"easiness":3,"order":3,"tags":["Performant Code"],"link":"/Learn--Clean-Code-With-Cpp/lessons/stack-vs-heap","slug":"stack-vs-heap","priority":0.575},{"title":"Use libraries","benefit":5,"easiness":3,"order":3,"tags":["Clean Code"],"link":"/Learn--Clean-Code-With-Cpp/lessons/use-libraries","slug":"use-libraries","priority":0.575},{"title":"assert","benefit":4,"easiness":5,"order":3,"tags":["Clean Code"],"link":"/Learn--Clean-Code-With-Cpp/lessons/assert","slug":"assert","priority":0.5625},{"title":"auto","benefit":4,"easiness":5,"order":3,"tags":["Beautiful Code","Clean Code","C++"],"link":"/Learn--Clean-Code-With-Cpp/lessons/auto","slug":"auto","priority":0.5625},{"title":"Testing","benefit":5,"easiness":2,"order":3,"tags":["Clean Code"],"link":"/Learn--Clean-Code-With-Cpp/lessons/testing","slug":"testing","priority":0.5625},{"title":"Type design","benefit":5,"easiness":2,"order":3,"tags":["Clean Code"],"link":"/Learn--Clean-Code-With-Cpp/lessons/type-design","slug":"type-design","priority":0.5625},{"title":"Dependencies","benefit":5,"easiness":1,"order":3,"tags":["Clean Code"],"link":"/Learn--Clean-Code-With-Cpp/lessons/dependencies","slug":"dependencies","priority":0.55},{"title":"Lambda functions","benefit":4,"easiness":4,"order":3,"tags":["Clean Code","C++"],"link":"/Learn--Clean-Code-With-Cpp/lessons/lambda","slug":"lambda","priority":0.55},{"title":"Master your IDE","benefit":4,"easiness":4,"order":3,"tags":["Tools"],"link":"/Learn--Clean-Code-With-Cpp/lessons/master-your-ide","slug":"master-your-ide","priority":0.55},{"title":"std::optional","benefit":4,"easiness":4,"order":3,"tags":["Clean Code","C++"],"link":"/Learn--Clean-Code-With-Cpp/lessons/optional","slug":"optional","priority":0.55},{"title":"Single Source of Truth","benefit":4,"easiness":4,"order":3,"tags":["Clean Code"],"link":"/Learn--Clean-Code-With-Cpp/lessons/single-source-of-truth","slug":"single-source-of-truth","priority":0.55},{"title":"Strong Typing","benefit":4,"easiness":4,"order":3,"tags":["Clean Code"],"link":"/Learn--Clean-Code-With-Cpp/lessons/strong-typing","slug":"strong-typing","priority":0.55},{"title":"Code reviews","benefit":4,"easiness":3,"order":3,"tags":["Workflow"],"link":"/Learn--Clean-Code-With-Cpp/lessons/code-reviews","slug":"code-reviews","priority":0.5375},{"title":"const","benefit":4,"easiness":3,"order":3,"tags":["Clean Code","C++"],"link":"/Learn--Clean-Code-With-Cpp/lessons/const","slug":"const","priority":0.5375},{"title":"Don\'t overfocus on performance","benefit":4,"easiness":3,"order":3,"tags":["Clean Code"],"link":"/Learn--Clean-Code-With-Cpp/lessons/dont-overfocus-on-performance","slug":"dont-overfocus-on-performance","priority":0.5375},{"title":"Git submodules","benefit":4,"easiness":3,"order":3,"tags":["Tools","Git"],"link":"/Learn--Clean-Code-With-Cpp/lessons/git-submodules","slug":"git-submodules","priority":0.5375},{"title":"STL algorithms","benefit":4,"easiness":3,"order":3,"tags":["Clean Code","Performant Code","C++"],"link":"/Learn--Clean-Code-With-Cpp/lessons/stl-algorithms","slug":"stl-algorithms","priority":0.5375},{"title":"Composition over Inheritance","benefit":4,"easiness":2,"order":3,"tags":["Clean Code"],"link":"/Learn--Clean-Code-With-Cpp/lessons/composition-over-inheritance","slug":"composition-over-inheritance","priority":0.525},{"title":"Debug vs Release","benefit":3,"easiness":5,"order":3,"tags":["Clean Code"],"link":"/Learn--Clean-Code-With-Cpp/lessons/debug-vs-release","slug":"debug-vs-release","priority":0.525},{"title":"Immediately Invoked Function","benefit":3,"easiness":5,"order":3,"tags":["Clean Code"],"link":"/Learn--Clean-Code-With-Cpp/lessons/immediately-invoked-function","slug":"immediately-invoked-function","priority":0.525},{"title":"Markdown","benefit":3,"easiness":5,"order":3,"tags":["Tools"],"link":"/Learn--Clean-Code-With-Cpp/lessons/markdown","slug":"markdown","priority":0.525},{"title":"Range-based for loop","benefit":3,"easiness":5,"order":3,"tags":["Clean Code","C++"],"link":"/Learn--Clean-Code-With-Cpp/lessons/range-based-for-loop","slug":"range-based-for-loop","priority":0.525},{"title":"Smart Pointers","benefit":3,"easiness":5,"order":3,"tags":["Clean Code","C++"],"link":"/Learn--Clean-Code-With-Cpp/lessons/smart-pointers","slug":"smart-pointers","priority":0.525},{"title":"Error Handling","benefit":3,"easiness":4,"order":3,"tags":["Clean Code"],"link":"/Learn--Clean-Code-With-Cpp/lessons/error-handling","slug":"error-handling","priority":0.5125},{"title":"Git Pull Requests","benefit":3,"easiness":4,"order":3,"tags":["Tools","Git"],"link":"/Learn--Clean-Code-With-Cpp/lessons/git-pull-request","slug":"git-pull-request","priority":0.5125},{"title":"Advanced Git features","benefit":3,"easiness":3,"order":3,"tags":["Tools","Git"],"link":"/Learn--Clean-Code-With-Cpp/lessons/advanced-git-features","slug":"advanced-git-features","priority":0.5},{"title":"CMake","benefit":3,"easiness":3,"order":3,"tags":["C++"],"link":"/Learn--Clean-Code-With-Cpp/lessons/cmake","slug":"cmake","priority":0.5},{"title":"Functional programming","benefit":3,"easiness":3,"order":3,"tags":["Clean Code"],"link":"/Learn--Clean-Code-With-Cpp/lessons/functional-programming","slug":"functional-programming","priority":0.5},{"title":"Move semantics","benefit":3,"easiness":3,"order":3,"tags":["Performant Code","C++"],"link":"/Learn--Clean-Code-With-Cpp/lessons/move-semantics","slug":"move-semantics","priority":0.5},{"title":"The Rule of 5","benefit":3,"easiness":3,"order":3,"tags":["Clean Code","C++"],"link":"/Learn--Clean-Code-With-Cpp/lessons/rule-of-5","slug":"rule-of-5","priority":0.5},{"title":"State and Strategy","benefit":3,"easiness":3,"order":3,"tags":["Clean Code"],"link":"/Learn--Clean-Code-With-Cpp/lessons/state-and-strategy","slug":"state-and-strategy","priority":0.5},{"title":"std::variant","benefit":3,"easiness":3,"order":3,"tags":["Clean Code","Performant Code","C++"],"link":"/Learn--Clean-Code-With-Cpp/lessons/variant","slug":"variant","priority":0.5},{"title":"Cache and Branches","benefit":3,"easiness":2,"order":3,"tags":["Performant Code"],"link":"/Learn--Clean-Code-With-Cpp/lessons/cache-and-branches","slug":"cache-and-branches","priority":0.4875},{"title":"Multithreading","benefit":3,"easiness":2,"order":3,"tags":["Performant Code"],"link":"/Learn--Clean-Code-With-Cpp/lessons/multithreading","slug":"multithreading","priority":0.4875},{"title":"Polymorphism","benefit":3,"easiness":2,"order":3,"tags":["Clean Code"],"link":"/Learn--Clean-Code-With-Cpp/lessons/polymorphism","slug":"polymorphism","priority":0.4875},{"title":"Watch conferences","benefit":5,"easiness":3,"order":4,"tags":["Workflow"],"link":"/Learn--Clean-Code-With-Cpp/lessons/watch-conferences","slug":"watch-conferences","priority":0.375},{"title":"Write libraries","benefit":5,"easiness":3,"order":4,"tags":["Clean Code"],"link":"/Learn--Clean-Code-With-Cpp/lessons/write-libraries","slug":"write-libraries","priority":0.375},{"title":"Dear ImGui","benefit":5,"easiness":2,"order":4,"tags":["Libraries & Frameworks"],"link":"/Learn--Clean-Code-With-Cpp/lessons/dear-imgui","slug":"dear-imgui","priority":0.36250000000000004},{"title":"Designated Initializers","benefit":4,"easiness":5,"order":4,"tags":["Clean Code","C++"],"link":"/Learn--Clean-Code-With-Cpp/lessons/designated_initializers","slug":"designated_initializers","priority":0.36250000000000004},{"title":"std::string and std::string_view","benefit":4,"easiness":4,"order":4,"tags":["C++"],"link":"/Learn--Clean-Code-With-Cpp/lessons/string-and-string-view","slug":"string-and-string-view","priority":0.35000000000000003},{"title":"Static site generators","benefit":4,"easiness":3,"order":4,"tags":["Tools"],"link":"/Learn--Clean-Code-With-Cpp/lessons/static-site-generators","slug":"static-site-generators","priority":0.3375},{"title":"Deleted functions","benefit":3,"easiness":5,"order":4,"tags":["Clean Code","C++"],"link":"/Learn--Clean-Code-With-Cpp/lessons/deleted-functions","slug":"deleted-functions","priority":0.325},{"title":"Type erasure","benefit":4,"easiness":2,"order":4,"tags":["Clean Code"],"link":"/Learn--Clean-Code-With-Cpp/lessons/type-erasure","slug":"type-erasure","priority":0.325},{"title":"wasm and electron","benefit":4,"easiness":2,"order":4,"tags":["Libraries & Frameworks"],"link":"/Learn--Clean-Code-With-Cpp/lessons/wasm-and-electron","slug":"wasm-and-electron","priority":0.325},{"title":"Scope guard","benefit":3,"easiness":4,"order":4,"tags":["Clean Code"],"link":"/Learn--Clean-Code-With-Cpp/lessons/scope-guard","slug":"scope-guard","priority":0.3125},{"title":"C++ casts","benefit":3,"easiness":3,"order":4,"tags":["Clean Code","C++"],"link":"/Learn--Clean-Code-With-Cpp/lessons/cpp-casts","slug":"cpp-casts","priority":0.30000000000000004},{"title":"Measuring performance","benefit":3,"easiness":3,"order":4,"tags":["Performant Code"],"link":"/Learn--Clean-Code-With-Cpp/lessons/measuring-performance","slug":"measuring-performance","priority":0.30000000000000004},{"title":"Precompiled Header","benefit":3,"easiness":3,"order":4,"tags":["C++"],"link":"/Learn--Clean-Code-With-Cpp/lessons/precompiled-header","slug":"precompiled-header","priority":0.30000000000000004},{"title":"<random>","benefit":3,"easiness":3,"order":4,"tags":["C++"],"link":"/Learn--Clean-Code-With-Cpp/lessons/random","slug":"random","priority":0.30000000000000004},{"title":"Linked lists","benefit":2,"easiness":5,"order":4,"tags":["Performant Code"],"link":"/Learn--Clean-Code-With-Cpp/lessons/linked-list","slug":"linked-list","priority":0.28750000000000003},{"title":"Avoid dead code","benefit":2,"easiness":3,"order":4,"tags":["Clean Code"],"link":"/Learn--Clean-Code-With-Cpp/lessons/avoid-dead-code","slug":"avoid-dead-code","priority":0.2625},{"title":"friend","benefit":1,"easiness":5,"order":4,"tags":["Clean Code","C++"],"link":"/Learn--Clean-Code-With-Cpp/lessons/friend","slug":"friend","priority":0.25},{"title":"Pointers vs References","benefit":2,"easiness":2,"order":4,"tags":["Clean Code","C++"],"link":"/Learn--Clean-Code-With-Cpp/lessons/pointers-vs-references","slug":"pointers-vs-references","priority":0.25},{"title":"Avoid nested namespaces","benefit":1,"easiness":5,"order":5,"tags":["Clean Code","C++"],"link":"/Learn--Clean-Code-With-Cpp/lessons/avoid-nested-namespaces","slug":"avoid-nested-namespaces","priority":0.05},{"title":"#if defined()","benefit":1,"easiness":5,"order":5,"tags":["Beautiful Code","C++"],"link":"/Learn--Clean-Code-With-Cpp/lessons/if-defined","slug":"if-defined","priority":0.05},{"title":"Trailing return type","benefit":1,"easiness":5,"order":5,"tags":["Beautiful Code","C++"],"link":"/Learn--Clean-Code-With-Cpp/lessons/trailing-return-type","slug":"trailing-return-type","priority":0.05}]')}}]);