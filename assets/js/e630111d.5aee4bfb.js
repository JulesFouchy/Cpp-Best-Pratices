"use strict";(self.webpackChunkteaching_toolbox_website_generator=self.webpackChunkteaching_toolbox_website_generator||[]).push([[4375],{4137:function(e,t,n){n.d(t,{Zo:function(){return m},kt:function(){return u}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),d=p(n),u=r,f=d["".concat(s,".").concat(u)]||d[u]||c[u]||o;return n?a.createElement(f,i(i({ref:t},m),{},{components:n})):a.createElement(f,i({ref:t},m))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7988:function(e,t,n){n.d(t,{Z:function(){return r}});var a=n(7294);function r(e){var t=e.title,n=e.author,r=e.link,o=e.duration,i=e.description;return a.createElement("span",null,a.createElement("a",{href:r,target:"_blank"},n,", ",a.createElement("i",null,t)),o&&a.createElement("span",null," (",o,")"),i&&a.createElement("span",null," ",i))}},3039:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return p},metadata:function(){return m},toc:function(){return c},default:function(){return u}});var a=n(7462),r=n(3366),o=(n(7294),n(4137)),i=n(7988),l=["components"],s={title:"DRY: Don't repeat yourself",benefit:5,easiness:2,level:2,tags:["Clean Code"]},p=void 0,m={unversionedId:"lessons/dry-dont-repeat-yourself",id:"lessons/dry-dont-repeat-yourself",title:"DRY: Don't repeat yourself",description:"Brief",source:"@site/../../content/lessons/dry-dont-repeat-yourself.md",sourceDirName:"lessons",slug:"/lessons/dry-dont-repeat-yourself",permalink:"/Learn--Clean-Code-With-Cpp/lessons/dry-dont-repeat-yourself",tags:[{label:"Clean Code",permalink:"/Learn--Clean-Code-With-Cpp/tags/clean-code"}],version:"current",frontMatter:{title:"DRY: Don't repeat yourself",benefit:5,easiness:2,level:2,tags:["Clean Code"]},sidebar:"lessons",previous:{title:"Write small functions",permalink:"/Learn--Clean-Code-With-Cpp/lessons/write-small-functions"},next:{title:"Enums",permalink:"/Learn--Clean-Code-With-Cpp/lessons/enums"}},c=[{value:"Brief",id:"brief",children:[],level:2},{value:"Going further",id:"going-further",children:[],level:2}],d={toc:c};function u(e){var t=e.components,n=(0,r.Z)(e,l);return(0,o.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"brief"},"Brief"),(0,o.kt)("p",null,"In software development we try to avoid duplications. This helps us maintain our code because the important stuff happens in only one place and we don't have to chase the duplicated code around in our code base when we want to make a change."),(0,o.kt)("p",null,"There are many ways to avoid duplications:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Use a loop or an algorithm"),", when you want to do the same thing multiple times in a row"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Use a function"),", when you want to do the same thing in different places"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Use a template"),", when you want to do the same thing but for different types"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Use a struct or a class"),", when you want to use the same group of data in different places"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Use a macro"),", (\ud83d\ude2c",(0,o.kt)("sup",{parentName:"li",id:"fnref-1"},(0,o.kt)("a",{parentName:"sup",href:"#fn-1",className:"footnote-ref"},"1")),") when you can't use any of the above methods, and have the courage to write and maintain some ugly macro-based code. (Honestly I believe that in most cases duplications are less of an evil than complicated metaprogramming based on macros, so I wouldn't recommend going down the route of macros most of the time). If you really need macros to do complicated things, take a look at libraries like ",(0,o.kt)("a",{parentName:"li",href:"https://www.boost.org/doc/libs/1_61_0/libs/hana/doc/html/index.html"},"Boost.Hana"),".")),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Tip")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},(0,o.kt)("em",{parentName:"p"},"Code duplication")," doesn't mean ",(0,o.kt)("em",{parentName:"p"},"textual duplication"),", but ",(0,o.kt)("strong",{parentName:"p"},"knowledge duplication"),".\nFor example, this is not violating DRY even though the text is the same in two places:"),(0,o.kt)("pre",{parentName:"div"},(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"bool age_is_valid(int age) {\n    return 0 < age && age < 18;\n}\n\nbool order_is_valid(int amount) {\n    return 0 < amount && amount < 18;\n}\n")),(0,o.kt)("p",{parentName:"div"},"It is feasible that we will need to change ",(0,o.kt)("inlineCode",{parentName:"p"},"order_is_valid")," while keeping ",(0,o.kt)("inlineCode",{parentName:"p"},"age_is_valid")," the same, and it wouldn't be practical to do if the code had been refactored away. In this example the duplication is a coincidence, not a fondamental property of our domain model."),(0,o.kt)("p",{parentName:"div"},"See also: ",(0,o.kt)(i.Z,{title:"SOLID, Revisited",author:"Tony Van Eerd",link:"https://youtu.be/glYq-dvgby4?t=4157",duration:"6min",mdxType:"Resource"}),"."))),(0,o.kt)("h2",{id:"going-further"},"Going further"),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Going Further")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},(0,o.kt)("em",{parentName:"p"},"DRY - The Evils of Duplication"),", Chapter 2 of ",(0,o.kt)("a",{parentName:"p",href:"https://pragprog.com/titles/tpp20/the-pragmatic-programmer-20th-anniversary-edition/"},"The Pragmatic Programmer")," (10min, I can lend you the book)"))),(0,o.kt)("div",{className:"footnotes"},(0,o.kt)("hr",{parentName:"div"}),(0,o.kt)("ol",{parentName:"div"},(0,o.kt)("li",{parentName:"ol",id:"fn-1"},"Unfortunately there are still some (very rare) use cases for macros. Hopefully those will disappear once we get reflection and proper metaprogramming in the language, which should come for C++26 or C++29.",(0,o.kt)("a",{parentName:"li",href:"#fnref-1",className:"footnote-backref"},"\u21a9")))))}u.isMDXComponent=!0}}]);