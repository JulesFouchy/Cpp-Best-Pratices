"use strict";(self.webpackChunklearn_cpp_and_dev_practices=self.webpackChunklearn_cpp_and_dev_practices||[]).push([[3164],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return f}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=p(n),f=o,b=d["".concat(c,".").concat(f)]||d[f]||l[f]||a;return n?r.createElement(b,s(s({ref:t},u),{},{components:n})):r.createElement(b,s({ref:t},u))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,s=new Array(a);s[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var p=2;p<a;p++)s[p]=n[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6809:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return c},metadata:function(){return p},toc:function(){return u},default:function(){return d}});var r=n(2122),o=n(9756),a=(n(7294),n(3905)),s=["components"],i={title:"std::variant",benefit:3,easiness:3,order:3,tags:["C++"]},c=void 0,p={unversionedId:"lessons/variant",id:"lessons/variant",isDocsHomePage:!1,title:"std::variant",description:"https://youtu.be/ojZbFIQSdl8?t=869",source:"@site/docs/lessons/variant.md",sourceDirName:"lessons",slug:"/lessons/variant",permalink:"/Learn--Cpp-And-Dev-Practices/docs/lessons/variant",tags:[{label:"C++",permalink:"/Learn--Cpp-And-Dev-Practices/docs/tags/c"}],version:"current",frontMatter:{title:"std::variant",benefit:3,easiness:3,order:3,tags:["C++"]},sidebar:"lessons",previous:{title:"State and Strategy",permalink:"/Learn--Cpp-And-Dev-Practices/docs/lessons/state-and-strategy"},next:{title:"Linked lists",permalink:"/Learn--Cpp-And-Dev-Practices/docs/lessons/linked-list"}},u=[],l={toc:u};function d(e){var t=e.components,n=(0,o.Z)(e,s);return(0,a.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://youtu.be/ojZbFIQSdl8?t=869"},"https://youtu.be/ojZbFIQSdl8?t=869"),"\n",(0,a.kt)("a",{parentName:"p",href:"https://youtu.be/ojZbFIQSdl8?t=1128"},"https://youtu.be/ojZbFIQSdl8?t=1128")),(0,a.kt)("p",null,"It is a very good alternative to enums, because it can contain data, and be resolved through functions overload instead of switches. "),(0,a.kt)("p",null,"To replace polymorphism made with inheritance: ",(0,a.kt)("a",{parentName:"p",href:"https://youtu.be/gKbORJtnVu8"},"https://youtu.be/gKbORJtnVu8")))}d.isMDXComponent=!0}}]);